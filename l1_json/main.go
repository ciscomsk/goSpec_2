package main

import "fmt"

// JSON используется для передачи данных между серверами на уровне API.
// JSON - структурирован - пары ключ: значение.
// !!! Не гарантирует соблюдение упорядоченности по выдаче ключей.
// !!! Строковые литералы ПО СТАНДАРТУ хранятся в двойных кавычках.

// Чтение:
// 1. Создается файловый дескриптор (файловый экземпляр).
// jsonFile, err := os.Open("users.json)
// 2. Сразу обрабатываем ошибки.
// if err != nil { ... }
// 3. Закрываем файл.
// defer jsonFile.Close()
// 4. Забираем данные из файла-дескриптора и помещаем в
// json.Unmarshall(byteArr, &)

// Сериализация - процесс конвертации объекта в последовательность байтов.
// Десериализация - процесс конвертации последовательности байтов в объект.

// В Go существует 2 способа работы с JSON файлами:
// 1. Структуризованная сериализация/десериализация - заранее подготавливается набор структур с явно
// прописанными правилами для полей объектов.
// 2. Неструктуризованная сериализация/десериализация.

func main() {
	fmt.Println("Hello world!")
}
